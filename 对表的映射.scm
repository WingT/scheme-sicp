(define (scale-list items factor)
  (if (null? items)
      (list)
      (cons (* factor (car items))
                  (scale-list (cdr items) factor))))
(define scale-list1 (lambda (items)
                     (lambda (factor)
                       (if (null? items)
                           (list)
                           (cons (* factor (car items))
                                 (scale-list (cdr items) factor))))))
(scale-list (list 1 2 3 4 5) 10)
(scale-list (list 1 2 3 4 5) 10)
(define (for-each l proc)
  (if (null? l)
      1
      (begin
        (proc (car l))
        (for-each (cdr l) proc))))
(for-each (list 1 2 3 4 5 6)
          (lambda (x) (newline) (display x)))
(restart 1)
