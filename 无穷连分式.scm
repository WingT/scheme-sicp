(define (cont-frac n d k)
  (define (cont-frac-iter count)
    (if (= count k)
        (/ (n count) (d count))
        (/ (n count) (+ (d count) (cont-frac-iter (+ count 1))))))
  (cont-frac-iter 1))
(define (n x) 1.0)
(define (d x) 1.0)
(define (test count now)
  ((let ((next (cont-frac n d (+ count 1))))
        (if (< (abs (- now next)) 0.0001)
            count
            (test (+ count 1) next)))))
(test 1 1.0)
