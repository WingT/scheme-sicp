(define tolerance 0.00000001)
(define (fixed-point f first-guess)
  (define (close-enough? v1 v2)
    (< (abs (- v1 v2)) tolerance))
  (define (try guess count)
    (let ((next (f guess)))
      (if (close-enough? guess next)
          (begin
            (display count)
            guess)
          (try next (+ count 1)))))
  (try first-guess 0))
;(fixed-point cos 1.0)
;(fixed-point (lambda (x) (+ (sin x) (cos x))) 1.0)
;(define (squareroot y)
; (fixed-point (lambda (x) (/ (+ x (/ y x)) 2)) 1.0))
;(squareroot 5)
;(fixed-point (lambda (x) (+ 1 (/ 1 x))) 1.0)
(fixed-point (lambda (x) (/ (log 1000) (log x))) 1.3)
(fixed-point (lambda (x) (/ (+ x (/ (log 1000) (log x))) 2)) 1.3)
